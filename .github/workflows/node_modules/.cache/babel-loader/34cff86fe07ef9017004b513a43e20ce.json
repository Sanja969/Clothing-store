{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBOvJb9qBXqPjmby2pF1qFfOsRVjUkml34',\n  authDomain: 'clothing-db-9844e.firebaseapp.com',\n  projectId: 'clothing-db-9844e',\n  storageBucket: 'clothing-db-9844e.appspot.com',\n  messagingSenderId: '320326711393',\n  appId: '1:320326711393:web:5f967df577d3e3a9311220'\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return; // eslint-disable-next-line no-return-await, consistent-return\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password"],"sources":["/home/sanja/udemy/clothing-store/src/utils/firebase/firebase.utils.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\n\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBOvJb9qBXqPjmby2pF1qFfOsRVjUkml34',\n  authDomain: 'clothing-db-9844e.firebaseapp.com',\n  projectId: 'clothing-db-9844e',\n  storageBucket: 'clothing-db-9844e.appspot.com',\n  messagingSenderId: '320326711393',\n  appId: '1:320326711393:web:5f967df577d3e3a9311220',\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  // eslint-disable-next-line no-return-await, consistent-return\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,8BAJF,QAKO,eALP;AAOA,SACEC,YADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,MAJF,QAKO,oBALP;AAOA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,mCAFS;EAGrBC,SAAS,EAAE,mBAHU;EAIrBC,aAAa,EAAE,+BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB;AASA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAId,kBAAJ,EAAjB;AACAc,QAAQ,CAACC,mBAAT,CAA6B;EAC3BC,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MAAMnB,eAAe,CAACkB,IAAD,EAAOH,QAAP,CAAnD;AAEP,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;AAEP,OAAO,MAAMkB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;EAC5D,IAAI,CAACA,QAAL,EAAe;EACf,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMpB,MAAM,CAACkB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBN,QAA/B;IACA,MAAMO,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAMxB,MAAM,CAACiB,UAAD,EAAa;QACvBI,WADuB;QAEvBC,KAFuB;QAGvBC;MAHuB,CAAb,CAAZ;IAKD,CAND,CAME,OAAOE,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACG,OAA7C;IACD;EACF;;EAED,OAAOX,UAAP;AACD,CAtBM;AAwBP,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAP,EAAcQ,QAAd,KAA2B;EAC3E,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB,OADkD,CAG3E;;EACA,OAAO,MAAMlC,8BAA8B,CAACgB,IAAD,EAAOU,KAAP,EAAcQ,QAAd,CAA3C;AACD,CALM"},"metadata":{},"sourceType":"module"}