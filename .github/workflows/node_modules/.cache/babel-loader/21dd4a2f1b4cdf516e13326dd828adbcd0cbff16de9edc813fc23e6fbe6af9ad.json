{"ast":null,"code":"/* eslint-disable no-return-await */\n/* eslint-disable no-unused-vars */\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBOvJb9qBXqPjmby2pF1qFfOsRVjUkml34',\n  authDomain: 'clothing-db-9844e.firebaseapp.com',\n  projectId: 'clothing-db-9844e',\n  storageBucket: 'clothing-db-9844e.appspot.com',\n  messagingSenderId: '320326711393',\n  appId: '1:320326711393:web:5f967df577d3e3a9311220'\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let addisional = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...addisional\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  // eslint-disable-next-line no-return-await, consistent-return\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  // eslint-disable-next-line no-return-await, consistent-return\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('sucess');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data());\n\n  // .reduce((acc, docSnapshot) => {\n  //   const { title, items } = docSnapshot.data();\n  //   acc[title.toLowerCase()] = items;\n  //   return acc;\n  // }, {});\n\n  // return categoryMap;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","addisional","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","getCategoriesAndDocuments","q","querySnapshot","docs","map","docSnapshot","data"],"sources":["/home/sanja/udemy/clothing-store/src/utils/firebase/firebase.utils.js"],"sourcesContent":["/* eslint-disable no-return-await */\n/* eslint-disable no-unused-vars */\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\n\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBOvJb9qBXqPjmby2pF1qFfOsRVjUkml34',\n  authDomain: 'clothing-db-9844e.firebaseapp.com',\n  projectId: 'clothing-db-9844e',\n  storageBucket: 'clothing-db-9844e.appspot.com',\n  messagingSenderId: '320326711393',\n  appId: '1:320326711393:web:5f967df577d3e3a9311220',\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth, addisional = {}) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...addisional,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  // eslint-disable-next-line no-return-await, consistent-return\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  // eslint-disable-next-line no-return-await, consistent-return\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log('sucess');\n};\n\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map((docSnapshot) => docSnapshot.data());\n\n  // .reduce((acc, docSnapshot) => {\n  //   const { title, items } = docSnapshot.data();\n  //   acc[title.toLowerCase()] = items;\n  //   return acc;\n  // }, {});\n\n  // return categoryMap;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}