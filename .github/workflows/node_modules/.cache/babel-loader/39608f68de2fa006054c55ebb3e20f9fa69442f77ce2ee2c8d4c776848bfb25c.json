{"ast":null,"code":"var _jsxFileName = \"/home/sanja/udemy/clothing-store/src/context/card.context.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable arrow-body-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport { createReducer } from '@reduxjs/toolkit';\nimport { createContext, useReducer } from 'react';\nimport { createAction } from '../utils/reducer/reducer.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCardItem = (cardItems, productToAdd) => {\n  const productExist = cardItems.find(item => item.id === productToAdd.id);\n  if (productExist) {\n    return cardItems.map(item => item.id === productToAdd.id ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n  return [...cardItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCardItem = (cardItems, productToRemove) => {\n  const productExist = cardItems.find(item => item.id === productToRemove.id);\n  if (productExist.quantity === 1) {\n    return cardItems.filter(item => item.id !== productToRemove.id);\n  }\n  return cardItems.map(item => item.id === productToRemove.id ? {\n    ...item,\n    quantity: item.quantity - 1\n  } : item);\n};\nconst clearCardItem = (cardItems, productToClear) => {\n  return cardItems.filter(item => item.id !== productToClear.id);\n};\nexport const CardContext = /*#__PURE__*/createContext({\n  isCardOpen: false,\n  setIsCardOpen: () => {},\n  cardItems: [],\n  addItemToCard: () => {},\n  removeItemFromCard: () => {},\n  clearItemFromCard: () => {},\n  cardCount: 0,\n  totalPrice: 0\n});\nexport const CARD_ACTION_TYPES = {\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_IS_CARD_OPEN: 'SET_IS_CARD_OPEN'\n};\nconst INITIAL_STATE = {\n  isCardOpen: false,\n  cardItems: [],\n  cardCount: 0,\n  totalPrice: 0\n};\nconst cardReducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n  switch (type) {\n    case CARD_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        ...payload\n      };\n    case CARD_ACTION_TYPES.SET_IS_CARD_OPEN:\n      return {\n        ...state,\n        isCardOpen: payload\n      };\n    default:\n      throw new Error(`unhandled type ${type} in cardReducer`);\n  }\n};\nexport const CardProvider = _ref2 => {\n  _s();\n  let {\n    children\n  } = _ref2;\n  const [state, dispatch] = useReducer(createReducer, INITIAL_STATE);\n  const {\n    cardItems,\n    cardCount,\n    totalPrice,\n    isCardOpen\n  } = state;\n  const updateCardItems = newCardItems => {\n    const newCardCount = newCardItems.reduce((acc, item) => acc + item.quantity, 0);\n    const newCardTotal = newCardItems.reduce((acc, item) => acc + item.quantity * item.price, 0);\n    dispatch(createAction(CARD_ACTION_TYPES.SET_CART_ITEMS, {\n      cartItems: newCardItems,\n      cardTotal: newCardTotal,\n      cardCount: newCardCount\n    }));\n  };\n  const addItemToCard = productToAdd => {\n    const newCardItems = addCardItem(cardItems, productToAdd);\n    updateCardItems(newCardItems);\n  };\n  const removeItemFromCard = productToRemove => {\n    const newCardItems = removeCardItem(cardItems, productToRemove);\n    updateCardItems(newCardItems);\n  };\n  const clearItemFromCard = productToRemove => {\n    const newCardItems = clearCardItem(cardItems, productToRemove);\n    updateCardItems(newCardItems);\n  };\n  const setIsCardOpen = bool => {\n    dispatch((CARD_ACTION_TYPES.SET_IS_CARD_OPEN, bool));\n  };\n  const value = {\n    isCardOpen,\n    setIsCardOpen: () => {},\n    cardItems,\n    addItemToCard,\n    removeItemFromCard,\n    cardCount,\n    clearItemFromCard,\n    totalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(CardProvider, \"ih+Vd9fHXqjzC8XFlo5K5uS4lm8=\");\n_c = CardProvider;\nvar _c;\n$RefreshReg$(_c, \"CardProvider\");","map":{"version":3,"names":["createReducer","createContext","useReducer","createAction","addCardItem","cardItems","productToAdd","productExist","find","item","id","map","quantity","removeCardItem","productToRemove","filter","clearCardItem","productToClear","CardContext","isCardOpen","setIsCardOpen","addItemToCard","removeItemFromCard","clearItemFromCard","cardCount","totalPrice","CARD_ACTION_TYPES","SET_CART_ITEMS","SET_IS_CARD_OPEN","INITIAL_STATE","cardReducer","state","type","payload","Error","CardProvider","children","dispatch","updateCardItems","newCardItems","newCardCount","reduce","acc","newCardTotal","price","cartItems","cardTotal","bool","value"],"sources":["/home/sanja/udemy/clothing-store/src/context/card.context.jsx"],"sourcesContent":["/* eslint-disable arrow-body-style */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  createContext, useReducer,\n} from 'react';\nimport { createAction } from '../utils/reducer/reducer.utils';\n\nconst addCardItem = (cardItems, productToAdd) => {\n  const productExist = cardItems.find((item) => item.id === productToAdd.id);\n\n  if (productExist) {\n    return cardItems.map((item) => (\n      item.id === productToAdd.id ? { ...item, quantity: item.quantity + 1 } : item));\n  }\n\n  return [...cardItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCardItem = (cardItems, productToRemove) => {\n  const productExist = cardItems.find((item) => item.id === productToRemove.id);\n\n  if (productExist.quantity === 1) {\n    return cardItems.filter((item) => item.id !== productToRemove.id);\n  }\n\n  return cardItems.map((item) => (\n    item.id === productToRemove.id ? { ...item, quantity: item.quantity - 1 } : item));\n};\n\nconst clearCardItem = (cardItems, productToClear) => {\n  return cardItems.filter((item) => item.id !== productToClear.id);\n};\n\nexport const CardContext = createContext({\n  isCardOpen: false,\n  setIsCardOpen: () => {},\n  cardItems: [],\n  addItemToCard: () => {},\n  removeItemFromCard: () => {},\n  clearItemFromCard: () => {},\n  cardCount: 0,\n  totalPrice: 0,\n});\n\nexport const CARD_ACTION_TYPES = {\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_IS_CARD_OPEN: 'SET_IS_CARD_OPEN',\n};\n\nconst INITIAL_STATE = {\n  isCardOpen: false,\n  cardItems: [],\n  cardCount: 0,\n  totalPrice: 0,\n};\n\nconst cardReducer = (state, { type, payload }) => {\n  switch (type) {\n    case CARD_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        ...payload,\n      };\n    case CARD_ACTION_TYPES.SET_IS_CARD_OPEN:\n      return {\n        ...state,\n        isCardOpen: payload,\n      };\n    default:\n      throw new Error(`unhandled type ${type} in cardReducer`);\n  }\n};\n\nexport const CardProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(createReducer, INITIAL_STATE);\n  const {\n    cardItems, cardCount, totalPrice, isCardOpen,\n  } = state;\n\n  const updateCardItems = (newCardItems) => {\n    const newCardCount = newCardItems.reduce((acc, item) => acc + item.quantity, 0);\n    const newCardTotal = newCardItems.reduce((acc, item) => acc + item.quantity * item.price, 0);\n\n    dispatch(createAction(CARD_ACTION_TYPES.SET_CART_ITEMS,\n      { cartItems: newCardItems, cardTotal: newCardTotal, cardCount: newCardCount }));\n  };\n\n  const addItemToCard = (productToAdd) => {\n    const newCardItems = addCardItem(cardItems, productToAdd);\n    updateCardItems(newCardItems);\n  };\n\n  const removeItemFromCard = (productToRemove) => {\n    const newCardItems = removeCardItem(cardItems, productToRemove);\n    updateCardItems(newCardItems);\n  };\n\n  const clearItemFromCard = (productToRemove) => {\n    const newCardItems = clearCardItem(cardItems, productToRemove);\n    updateCardItems(newCardItems);\n  };\n\n  const setIsCardOpen = (bool) => {\n    dispatch((CARD_ACTION_TYPES.SET_IS_CARD_OPEN, bool));\n  };\n\n  const value = {\n    isCardOpen,\n    setIsCardOpen: () => {},\n    cardItems,\n    addItemToCard,\n    removeItemFromCard,\n    cardCount,\n    clearItemFromCard,\n    totalPrice,\n  };\n\n  return (\n    <CardContext.Provider value={value}>\n      { children }\n    </CardContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}